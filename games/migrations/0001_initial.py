# Generated by Django 5.1.5 on 2025-02-28 07:44

import datetime
import django.core.validators
import django.db.models.deletion
import games.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Futsal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=450)),
                ('location', models.CharField(max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField(default=games.models.get_next_friday)),
                ('time', models.TimeField(default=datetime.time(18, 0))),
                ('teamnameA', models.CharField(blank=True, max_length=255, null=True)),
                ('logoA', models.ImageField(blank=True, null=True, upload_to='team/logo/')),
                ('teamnameB', models.CharField(blank=True, max_length=255, null=True)),
                ('logoB', models.ImageField(blank=True, null=True, upload_to='team/logo/')),
                ('goalsA', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goalsB', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_complete', models.BooleanField(default=False)),
                ('available_players', models.ManyToManyField(blank=True, null=True, related_name='game_players', to='accounts.player')),
                ('futsal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue', to='games.futsal')),
                ('teamA', models.ManyToManyField(blank=True, null=True, related_name='teamA', to='accounts.player')),
                ('teamB', models.ManyToManyField(blank=True, null=True, related_name='teamB', to='accounts.player')),
            ],
            options={
                'unique_together': {('date', 'time', 'futsal')},
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='player_assists', to='accounts.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='goals', to='games.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='player_goals', to='accounts.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGameRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=5)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_rating', to='games.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_game_rating', to='accounts.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerReviewRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_player', to='games.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_game_review_rating', to='accounts.player')),
                ('rating_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_player', to='accounts.player')),
            ],
        ),
    ]
